{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"02. DataFrame","provenance":[],"collapsed_sections":["zemqc5gyfj5c"],"mount_file_id":"1vnIiZZV3daI549KVu4MAlUInwJZikTpR","authorship_tag":"ABX9TyM25I5GrFG2ZCQCqUZkKKHj"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"Tgk_U6G-ZmKG"},"source":["# **Introduction**\n","DataFrame adalah suatu objek 2 dimensi tempat menyimpan data dengan lebih terstruktur. dataframe memiliki 2 index, yaitu index baris dan index columns. Dalam satu column dataframe harus memiliki tipe data yang sama. tapi antar columnnya dataframe bisa memiliki jenis data yang berbeda. \n","\n","A Data frame is a two-dimensional data structure, i.e., data is aligned in a tabular fashion in rows and columns.\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"T-G3w7lP8dP_"},"source":["## Features of DataFrame\n","*   Potentially columns are of different types\n","*   Size – Mutable\n","*   Labeled axes (rows and columns)\n","*   Can Perform Arithmetic operations on rows and columns\n","\n","untuk lebih jelasnya perhatikan contoh berikut"]},{"cell_type":"code","metadata":{"id":"FcduCqiJR-jW","executionInfo":{"status":"ok","timestamp":1617287395927,"user_tz":-480,"elapsed":1536,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}}},"source":["import pandas as pd\n","\n","df = pd.DataFrame({'tipe_int': [50, 21], 'tipe_string': ['a', 'b']})"],"execution_count":142,"outputs":[]},{"cell_type":"code","metadata":{"id":"_nzmgXksaDaL","colab":{"base_uri":"https://localhost:8080/","height":159},"executionInfo":{"status":"ok","timestamp":1617287397240,"user_tz":-480,"elapsed":2833,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"de0d88fc-f773-4925-c1ad-6811e92fb405"},"source":["#Tampilan ketika di print\n","print(df)\n","#Tampilan generate langsung\n","df"],"execution_count":143,"outputs":[{"output_type":"stream","text":["   tipe_int tipe_string\n","0        50           a\n","1        21           b\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tipe_int</th>\n","      <th>tipe_string</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>50</td>\n","      <td>a</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>21</td>\n","      <td>b</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   tipe_int tipe_string\n","0        50           a\n","1        21           b"]},"metadata":{"tags":[]},"execution_count":143}]},{"cell_type":"code","metadata":{"id":"wTn5oTnNaP1a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287397241,"user_tz":-480,"elapsed":2818,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"7c1f63b3-dfb3-473b-f1c8-5d1ef5c66543"},"source":["print(type(df))\n","type(df)"],"execution_count":144,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["pandas.core.frame.DataFrame"]},"metadata":{"tags":[]},"execution_count":144}]},{"cell_type":"markdown","metadata":{"id":"3NCKVZr_akbX"},"source":["# **DataFrame Constructor**\n","\n","A pandas DataFrame can be created using the following constructor −\n","\n","> **pandas.DataFrame( data, index, columns, dtype, copy)**\n","\n","\n","*   **data**\n","\n","data takes various forms like ndarray, series, map, lists, dict, constants and also another DataFrame.\n","\n","*   **index**\n","\n","For the row labels, the Index to be used for the resulting frame is Optional Default np.arange(n) if no index is passed.\n","\n","*   **columns**\n","\n","For column labels, the optional default syntax is - np.arange(n). This is only true if no index is passed.\n","\n","*   **dtype**\n","\n","Data type of each column.\n","\n","*   **copy**\n","\n","This command (or whatever it is) is used for copying of data, if the default is False.\n","\n"]},{"cell_type":"code","metadata":{"id":"S6qPIWGdZZmB","executionInfo":{"status":"ok","timestamp":1617287397243,"user_tz":-480,"elapsed":2805,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}}},"source":["pd.DataFrame?"],"execution_count":145,"outputs":[]},{"cell_type":"code","metadata":{"id":"ofrcKddlctkw","colab":{"base_uri":"https://localhost:8080/","height":166},"executionInfo":{"status":"ok","timestamp":1617287397319,"user_tz":-480,"elapsed":2867,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"7950f6ff-c841-4865-e220-b2265048d99f"},"source":["import pandas as pd\n","\n","df = pd.DataFrame({'Calon President': ['Imam', 'Abrar', 'Muthia', 'Itha'], 'Jumlah Voting': [100, 50, 60, 20]})\n","df"],"execution_count":146,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Calon President</th>\n","      <th>Jumlah Voting</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Imam</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Abrar</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Muthia</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Itha</td>\n","      <td>20</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Calon President  Jumlah Voting\n","0            Imam            100\n","1           Abrar             50\n","2          Muthia             60\n","3            Itha             20"]},"metadata":{"tags":[]},"execution_count":146}]},{"cell_type":"markdown","metadata":{"id":"N7eNCiipzrde"},"source":["## Index"]},{"cell_type":"code","metadata":{"id":"vgtFwdwrtenn","colab":{"base_uri":"https://localhost:8080/","height":166},"executionInfo":{"status":"ok","timestamp":1617287397320,"user_tz":-480,"elapsed":2851,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"e3dfcfd3-334e-4637-a4c1-6fada0af0922"},"source":["df.index = ['a', 'b', 'c', 'd']\n","df"],"execution_count":147,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Calon President</th>\n","      <th>Jumlah Voting</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>a</th>\n","      <td>Imam</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>b</th>\n","      <td>Abrar</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>c</th>\n","      <td>Muthia</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>d</th>\n","      <td>Itha</td>\n","      <td>20</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Calon President  Jumlah Voting\n","a            Imam            100\n","b           Abrar             50\n","c          Muthia             60\n","d            Itha             20"]},"metadata":{"tags":[]},"execution_count":147}]},{"cell_type":"code","metadata":{"id":"QNGeERV1zwX_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287397321,"user_tz":-480,"elapsed":2837,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"686f389e-804b-41bc-9d67-b9f904f18e29"},"source":["df.index"],"execution_count":148,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['a', 'b', 'c', 'd'], dtype='object')"]},"metadata":{"tags":[]},"execution_count":148}]},{"cell_type":"markdown","metadata":{"id":"kmTNLaEOz2Pi"},"source":["## Columns"]},{"cell_type":"code","metadata":{"id":"oHj23aKDtl2j","colab":{"base_uri":"https://localhost:8080/","height":166},"executionInfo":{"status":"ok","timestamp":1617287397324,"user_tz":-480,"elapsed":2825,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"02650947-1b6a-420b-8470-56e8f56363dd"},"source":["df.columns = ['Jumlah Voting', 'Calon President']\n","df"],"execution_count":149,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Jumlah Voting</th>\n","      <th>Calon President</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>a</th>\n","      <td>Imam</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>b</th>\n","      <td>Abrar</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>c</th>\n","      <td>Muthia</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>d</th>\n","      <td>Itha</td>\n","      <td>20</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Jumlah Voting  Calon President\n","a          Imam              100\n","b         Abrar               50\n","c        Muthia               60\n","d          Itha               20"]},"metadata":{"tags":[]},"execution_count":149}]},{"cell_type":"code","metadata":{"id":"GuuYxQ-nz6Yl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287397324,"user_tz":-480,"elapsed":2805,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"e8672532-c3d7-4519-ce59-7661c69ec989"},"source":["df.columns"],"execution_count":150,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Jumlah Voting', 'Calon President'], dtype='object')"]},"metadata":{"tags":[]},"execution_count":150}]},{"cell_type":"markdown","metadata":{"id":"VqcmFM7O0Hyr"},"source":["## Values"]},{"cell_type":"code","metadata":{"id":"zUiL6RO9t7rs","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287397325,"user_tz":-480,"elapsed":2796,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"c2003d4a-6350-4187-8d19-d92a34f554b7"},"source":["print(type(df.values))\n","df.values"],"execution_count":151,"outputs":[{"output_type":"stream","text":["<class 'numpy.ndarray'>\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["array([['Imam', 100],\n","       ['Abrar', 50],\n","       ['Muthia', 60],\n","       ['Itha', 20]], dtype=object)"]},"metadata":{"tags":[]},"execution_count":151}]},{"cell_type":"code","metadata":{"id":"E-1gZOzWzGtc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287397325,"user_tz":-480,"elapsed":2785,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"1177c156-c976-4095-b88b-aea484a5cefb"},"source":["df['Jumlah Voting'].values"],"execution_count":152,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Imam', 'Abrar', 'Muthia', 'Itha'], dtype=object)"]},"metadata":{"tags":[]},"execution_count":152}]},{"cell_type":"markdown","metadata":{"id":"w0GYKzj_6qIt"},"source":["# **Create DataFrame**\n","\n","A pandas DataFrame can be created using various inputs like −\n","\n","*   Lists\n","*   Numpy Array\n","*   Dictionary\n","*   Series\n","*   Another DataFrame\n","\n","In the subsequent sections of this chapter, we will see how to create a DataFrame using these inputs."]},{"cell_type":"markdown","metadata":{"id":"gtefMoGF8GLD"},"source":["## Create Emty DataFrame"]},{"cell_type":"code","metadata":{"id":"UO84t3Kr8J6o","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287397326,"user_tz":-480,"elapsed":2775,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"a1a20796-4d34-42f5-9cc4-513c325ff375"},"source":["#import the pandas library and aliasing as pd\n","import pandas as pd\n","df = pd.DataFrame()\n","print(df)"],"execution_count":153,"outputs":[{"output_type":"stream","text":["Empty DataFrame\n","Columns: []\n","Index: []\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"f_mNXuM68UQz"},"source":["## Create a DataFrame from Lists\n","The DataFrame can be created using a *single list* or a *list of lists*.\n","\n","list\n","> data = [1,2,3,4,5]\n","\n","list of list\n","\n","> data = [['Alex',10],['Bob',12],['Clarke',13]]\n","\n","note :\n","\n","*   Index dan Column secara default np.arange(n) -> 0, 1, 2, ..\n","*   bisa diubah dengan menggunakan index dan columns parameter\n","*   Nilai list akan digunakan sebagai nilai columns 1 \n","*   Hanya bisa menggunakan columns =[ ] parameter sebanyak dimensi data, jika tidak akan terjadi error\n","\n"]},{"cell_type":"code","metadata":{"id":"SLdAlmeP8irS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287397326,"user_tz":-480,"elapsed":2756,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"e96b4a72-7f86-4f96-ec20-26b5c4666fd1"},"source":["# make from list \n","import pandas as pd\n","data = [1,2,3,4,5]\n","df = pd.DataFrame(data)\n","print(df)"],"execution_count":154,"outputs":[{"output_type":"stream","text":["   0\n","0  1\n","1  2\n","2  3\n","3  4\n","4  5\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"A1lKscbV8p8x","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287397327,"user_tz":-480,"elapsed":2745,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"6aaa4495-9aba-4494-f1ea-fc3e4a2babe6"},"source":["# make from list of list with columns\n","import pandas as pd\n","data = [['Alex',10],['Bob',12],['Clarke',13]]\n","df = pd.DataFrame(data,columns=['Name','Age'])\n","print(df)"],"execution_count":155,"outputs":[{"output_type":"stream","text":["     Name  Age\n","0    Alex   10\n","1     Bob   12\n","2  Clarke   13\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"3vHb97uV8u5E","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287397327,"user_tz":-480,"elapsed":2732,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"536dcf89-6616-4b97-a6bd-deb7de26f1fe"},"source":["# make from list of list with columns and dtype parameter\n","# Observe, the dtype parameter changes the type of Age column to floating point.\n","import pandas as pd\n","data = [['Alex',10],['Bob',12],['Clarke',13]]\n","df = pd.DataFrame(data,columns=['Name','Age'],dtype=float)\n","print(df)"],"execution_count":156,"outputs":[{"output_type":"stream","text":["     Name   Age\n","0    Alex  10.0\n","1     Bob  12.0\n","2  Clarke  13.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"EUQD1PRe9Z2M","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287397328,"user_tz":-480,"elapsed":2718,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"19d3e09c-ad47-47e0-82c4-8c69658427b0"},"source":["# make from list of list with index, columns and dtype parameter\n","import pandas as pd\n","data = [['Alex',10],['Bob',12],['Clarke',13]]\n","df = pd.DataFrame(data,index=['one', 'two', 'tree'], columns=['Name','Age'],dtype=float)\n","print(df)"],"execution_count":157,"outputs":[{"output_type":"stream","text":["        Name   Age\n","one     Alex  10.0\n","two      Bob  12.0\n","tree  Clarke  13.0\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"94stsmPK9pET"},"source":["## Create a DataFrame from Dict of ndarrays / Lists\n","\n","All the ndarrays must be of same length. If index is passed, then the length of the index should equal to the length of the arrays.\n","\n","If no index is passed, then by default, index will be range(n), where n is the array length.\n","\n","Dictionary of ndarray / List\n","> {'Nama':['Imam', 'Itha', 'Kurnia', 'Aryanti'], 'Umur':[21, 34, 56, 78]}\n","\n","catatan\n","\n","*   ndarray/list jika memiliki lebih dari satu dari dictionary harus memiliki panjang yang sama.\n","*   Index = default 0,1,2,3..\n","*   Columns = berasal dari Key.\n","*   Value masing-masing column berasal dari ndarray / list nilai tiap key.\n","\n","*   Jika melakukan akses parameter dengan columns = [] (parameter) jika tidak ada key yang sama maka akan menghasilkan nilai \"NaN\"\n","\n","*NaN akan menyebabkan decimal type menjadi float*\n","\n"]},{"cell_type":"code","metadata":{"id":"yIpTHKRn9pWM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287397328,"user_tz":-480,"elapsed":2703,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"f93ec677-f52f-4c10-ee05-60b5270ee47f"},"source":["import pandas as pd\n","data = {'Name':['Tom', 'Jack', 'Steve', 'Ricky'],'Age':[28,34,29,42]}\n","df = pd.DataFrame(data)\n","print(df)"],"execution_count":158,"outputs":[{"output_type":"stream","text":["    Name  Age\n","0    Tom   28\n","1   Jack   34\n","2  Steve   29\n","3  Ricky   42\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"friQN7iC_Kxi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287397328,"user_tz":-480,"elapsed":2690,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"05069412-3d3f-4492-e9a5-92fbd99bbd65"},"source":["#Memiliki panjang list yang berbeda\n","import pandas as pd\n","data = {'Name':['Tom', 'Jack', 'Steve', 'Ricky'],'Age':[28,34,29]}\n","# df = pd.DataFrame(data) #ERROR arrays must all be same length\n","print(data)"],"execution_count":159,"outputs":[{"output_type":"stream","text":["{'Name': ['Tom', 'Jack', 'Steve', 'Ricky'], 'Age': [28, 34, 29]}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"lbZ2MKiF_ix7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287397329,"user_tz":-480,"elapsed":2679,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"d04a9b1a-889f-4fb8-8529-3efc9298cdf8"},"source":["#mengubah index\n","import pandas as pd\n","data = {'Name':['Tom', 'Jack', 'Steve', 'Ricky'],'Age':[28,34,29,42]}\n","df = pd.DataFrame(data, index=['rank1','rank2','rank3','rank4'])\n","print(df)"],"execution_count":160,"outputs":[{"output_type":"stream","text":["        Name  Age\n","rank1    Tom   28\n","rank2   Jack   34\n","rank3  Steve   29\n","rank4  Ricky   42\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"TeH_3hb6_pRG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287397329,"user_tz":-480,"elapsed":2667,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"b8413e58-0c74-4154-833c-920935d3946c"},"source":["#mengakses spesifik column dengan parameter\n","import pandas as pd\n","data = {'Name':['Tom', 'Jack', 'Steve', 'Ricky'],'Age':[28,34,29,42]}\n","df = pd.DataFrame(data, index=['rank1','rank2','rank3','rank4'], columns=['Name', 'Address']) # tidak ada key Address maka NaN\n","print(df)"],"execution_count":161,"outputs":[{"output_type":"stream","text":["        Name Address\n","rank1    Tom     NaN\n","rank2   Jack     NaN\n","rank3  Steve     NaN\n","rank4  Ricky     NaN\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"47BXvRDdGjAU","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287397330,"user_tz":-480,"elapsed":2657,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"90927afe-1b29-42b0-bcf1-7930dc0b61bf"},"source":["#dictionary of list of list\n","import pandas as pd\n","data = {'Name':['Tom', ['Jack', 'Steve', 'Ricky']],'Age':[28,[34,29,42]]}\n","df = pd.DataFrame(data)\n","print(df)"],"execution_count":162,"outputs":[{"output_type":"stream","text":["                   Name           Age\n","0                   Tom            28\n","1  [Jack, Steve, Ricky]  [34, 29, 42]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"iKEAvvtwXVqQ"},"source":["## Create a DataFrame from Dict of Dict"]},{"cell_type":"code","metadata":{"id":"NYpGz8ViXdl-","colab":{"base_uri":"https://localhost:8080/","height":136},"executionInfo":{"status":"ok","timestamp":1617287397330,"user_tz":-480,"elapsed":2645,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"9032deef-d80d-4d2c-a105-d258e635bfff"},"source":["# Membuat datafame sederhana\n","  \n","# importing pandas as pd \n","import pandas as pd \n","  \n","# membuat dataframe\n","df = pd.DataFrame({'Name': {0: 'John', 1: 'Bob', 2: 'Shiela'}, \n","                   'Course': {0: 'Masters', 1: 'Graduate', 2: 'Graduate'}, \n","                   'Age': {0: 27, 1: 23, 2: 21}}) \n","df "],"execution_count":163,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Course</th>\n","      <th>Age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>John</td>\n","      <td>Masters</td>\n","      <td>27</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Bob</td>\n","      <td>Graduate</td>\n","      <td>23</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Shiela</td>\n","      <td>Graduate</td>\n","      <td>21</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     Name    Course  Age\n","0    John   Masters   27\n","1     Bob  Graduate   23\n","2  Shiela  Graduate   21"]},"metadata":{"tags":[]},"execution_count":163}]},{"cell_type":"markdown","metadata":{"id":"ggVwR73FAtyI"},"source":["## Create a DataFrame from List of Dicts\n","\n","List of Dictionaries can be passed as input data to create a DataFrame. The dictionary keys are by default taken as column names.\n","\n","List of Dictionary\n","> [{'a':1, 'b':2, 'c':3}, {'a':1, 'b':2, 'c':3, 'd':4}]\n","\n","catatan\n","\n","*   Index = default 0,1,2,3..\n","*   Columns = berasal dari key (Tapi ditentukan untuk tiap data dictionary dari list yang berbeda pada key mungkin berbeda disetiap data)\n","*   Value masing-masing column berasal dari value tiap key di tiap dictionary di list\n","*   Jika pada satu key memiliki key yang berbeda, maka untuk data dictionary pada list yang tidak memiliki nilai tersebut akan bernilai \"NaN\" untuk valuenya. disebut (Observe, NaN (Not a Number) is appended in ***missing areas***.)\n","*   Jika melakukan akses parameter dengan columns = [] (parameter) jika tidak ada key yang sama maka akan menghasilkan nilai \"NaN\"\n","\n","*NaN akan menyebabkan decimal type menjadi float*"]},{"cell_type":"code","metadata":{"id":"gYxGYTtDB36p","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287397331,"user_tz":-480,"elapsed":2635,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"406e67c0-c726-471c-810a-a2454098b1cd"},"source":["import pandas as pd\n","data = [{'a': 1, 'b': 2},{'a': 5, 'b': 10, 'c': 20}]\n","df = pd.DataFrame(data)\n","print(df)\n","# c index 0 akan bernilai NaN karena tidak ada pada data list dictionary pertama"],"execution_count":164,"outputs":[{"output_type":"stream","text":["   a   b     c\n","0  1   2   NaN\n","1  5  10  20.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"DpogjvBUCJ_A","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287397331,"user_tz":-480,"elapsed":2623,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"80e64854-ad3e-4e14-c9fb-3f3c0ce6dddf"},"source":["#mengubah index\n","import pandas as pd\n","data = [{'a': 1, 'b': 2},{'a': 5, 'b': 10, 'c': 20}]\n","df = pd.DataFrame(data, index=['first', 'second'])\n","print(df)"],"execution_count":165,"outputs":[{"output_type":"stream","text":["        a   b     c\n","first   1   2   NaN\n","second  5  10  20.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"9f5KooK5CWjl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287397332,"user_tz":-480,"elapsed":2612,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"7ae59431-5709-434d-9af6-a3b4bcf54b08"},"source":["#contoh mengakses dengan column (dengan key not found)\n","import pandas as pd\n","data = [{'a': 1, 'b': 2},{'a': 5, 'b': 10, 'c': 20}]\n","\n","#With two column indices, values same as dictionary keys\n","df1 = pd.DataFrame(data, index=['first', 'second'], columns=['a', 'b'])\n","\n","#With two column indices with one index with other name\n","df2 = pd.DataFrame(data, index=['first', 'second'], columns=['a', 'b1']) # b1 tidak ada pada key maka akan bernilai NaN\n","print(df1)\n","print()\n","print(df2)"],"execution_count":166,"outputs":[{"output_type":"stream","text":["        a   b\n","first   1   2\n","second  5  10\n","\n","        a  b1\n","first   1 NaN\n","second  5 NaN\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"hLasFBj7DJgO"},"source":["## Create a DataFrame from Dict of Series\n","Dictionary of Series can be passed to form a DataFrame. The resultant index is the union of all the series indexes passed.\n","\n","\n","Dictionary of Series\n","> {'one':pd.Series([1,2,3], index=['a', 'b', 'c']), 'two':pd.Series([1,2,3,4], index=['a', 'b', 'c', 'd'])}\n","\n","catatan\n","\n","*   Index = default berasal dari nilai index pada Series (Tapi ditentukan untuk tiap data Series memiliki index mungkin berbeda disetiap data, maka jika salah satu items tdk ada index tersebut maka value bernilai NaN  ***missing areas***)\n","*   Columns = berasal dari key Tiap items Dictionary\n","*   Value masing-masing column berasal dari data Series dihubungkan dengan index parameter sebagai index columns\n","*   Jika melakukan akses parameter dengan columns = [] (parameter) jika tidak ada key yang sama maka akan menghasilkan nilai \"NaN\"\n","\n","*NaN akan menyebabkan decimal type menjadi float*"]},{"cell_type":"code","metadata":{"id":"M8ZGIaZdFFky","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287398223,"user_tz":-480,"elapsed":3491,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"59a9bc22-62d5-4848-e411-523e1211e8a7"},"source":["import pandas as pd\n","\n","d = {'one' : pd.Series([1, 2, 3], index=['a', 'b', 'c']), # index d pada columns one akan bernilai NaN karena tidak memiliki nilai\n","   'two' : pd.Series([1, 2, 3, 4], index=['a', 'b', 'c', 'd'])} \n","\n","df = pd.DataFrame(d)\n","print(df)"],"execution_count":167,"outputs":[{"output_type":"stream","text":["   one  two\n","a  1.0    1\n","b  2.0    2\n","c  3.0    3\n","d  NaN    4\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"XvdY4OdqFUWy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287398227,"user_tz":-480,"elapsed":3479,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"c7cd4837-7bf7-4bee-bd7b-38983eb43e44"},"source":["import pandas as pd\n","\n","d = {'one' : pd.Series([1, 2, 3], index=['a', 'b', 'c']), # index d, e, f Nan\n","   'two' : pd.Series([1, 2, 3, 4], index=['a', 'b', 'c', 'd']), # index e, f Nan\n","   'tree' : pd.Series([1, 2, 3, 4, 5, 6], index=['a', 'b', 'c', 'd', 'e', 'f'])} \n","\n","df = pd.DataFrame(d)\n","print(df)"],"execution_count":168,"outputs":[{"output_type":"stream","text":["   one  two  tree\n","a  1.0  1.0     1\n","b  2.0  2.0     2\n","c  3.0  3.0     3\n","d  NaN  4.0     4\n","e  NaN  NaN     5\n","f  NaN  NaN     6\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Brt9oIuTW8eB","colab":{"base_uri":"https://localhost:8080/","height":136},"executionInfo":{"status":"ok","timestamp":1617287398228,"user_tz":-480,"elapsed":3467,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"22f95b44-9167-4c12-c6c1-09befd94146d"},"source":["matematika = pd.Series({'otong':80, 'dinda':90, 'mamat':100})\n","fisika = pd.Series({'otong':90, 'dinda':70, 'mamat':100})\n","biologi = pd.Series({'otong':100, 'dinda':60, 'mamat':90})\n","\n","df = pd.DataFrame({'matematika':matematika, 'fisika':fisika, 'biologi':biologi})\n","df"],"execution_count":169,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>matematika</th>\n","      <th>fisika</th>\n","      <th>biologi</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>otong</th>\n","      <td>80</td>\n","      <td>90</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>dinda</th>\n","      <td>90</td>\n","      <td>70</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>mamat</th>\n","      <td>100</td>\n","      <td>100</td>\n","      <td>90</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       matematika  fisika  biologi\n","otong          80      90      100\n","dinda          90      70       60\n","mamat         100     100       90"]},"metadata":{"tags":[]},"execution_count":169}]},{"cell_type":"markdown","metadata":{"id":"AcaEkfD157Sf"},"source":["# Operation Between DataFrame\n","\n","Dalam DataFrame boleh melakukan operasi aritmatika\n","Perlu diperhatikan nilai NaN jika dalam Aritmatika akan tetap menghasilkan NaN"]},{"cell_type":"code","metadata":{"id":"Vso6ibAI6BKQ","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1617287398228,"user_tz":-480,"elapsed":3455,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"af2f805d-3f72-46f0-d6d5-5c2d26b9c9ab"},"source":["import pandas as pd\n","data1 = {'Angka1': [1,2,3,4,5], 'Angka2':[5,4,3,2,1], 'Angka3':[1,3,5,7,9], 'Angka4':[9,7,5,3,1]}\n","data2 = {'Angka1': [2,4,6,8], 'Angka2':[8,6,4,2], 'Angka3':[1,3,5,7]}\n","df1 = pd.DataFrame(data1)\n","df2 = pd.DataFrame(data2)\n","df1"],"execution_count":170,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Angka1</th>\n","      <th>Angka2</th>\n","      <th>Angka3</th>\n","      <th>Angka4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Angka1  Angka2  Angka3  Angka4\n","0       1       5       1       9\n","1       2       4       3       7\n","2       3       3       5       5\n","3       4       2       7       3\n","4       5       1       9       1"]},"metadata":{"tags":[]},"execution_count":170}]},{"cell_type":"code","metadata":{"id":"OXvUVI1k6FyQ","colab":{"base_uri":"https://localhost:8080/","height":166},"executionInfo":{"status":"ok","timestamp":1617287398229,"user_tz":-480,"elapsed":3443,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"76144d12-3e06-4508-928c-e12c59d37577"},"source":["df2"],"execution_count":171,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Angka1</th>\n","      <th>Angka2</th>\n","      <th>Angka3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Angka1  Angka2  Angka3\n","0       2       8       1\n","1       4       6       3\n","2       6       4       5\n","3       8       2       7"]},"metadata":{"tags":[]},"execution_count":171}]},{"cell_type":"code","metadata":{"id":"oILCqJf77Ka5","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1617287398229,"user_tz":-480,"elapsed":3430,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"f0a416c9-a7ca-46ff-e773-cab7d602e780"},"source":["df1 + df2"],"execution_count":172,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Angka1</th>\n","      <th>Angka2</th>\n","      <th>Angka3</th>\n","      <th>Angka4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3.0</td>\n","      <td>13.0</td>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>6.0</td>\n","      <td>10.0</td>\n","      <td>6.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>9.0</td>\n","      <td>7.0</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>12.0</td>\n","      <td>4.0</td>\n","      <td>14.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Angka1  Angka2  Angka3  Angka4\n","0     3.0    13.0     2.0     NaN\n","1     6.0    10.0     6.0     NaN\n","2     9.0     7.0    10.0     NaN\n","3    12.0     4.0    14.0     NaN\n","4     NaN     NaN     NaN     NaN"]},"metadata":{"tags":[]},"execution_count":172}]},{"cell_type":"code","metadata":{"id":"LxRJNbng7UCU","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1617287398230,"user_tz":-480,"elapsed":3418,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"f4eb36cf-fbfd-40e9-d03d-c8fc02a0769a"},"source":["df1 - df2"],"execution_count":173,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Angka1</th>\n","      <th>Angka2</th>\n","      <th>Angka3</th>\n","      <th>Angka4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1.0</td>\n","      <td>-3.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-2.0</td>\n","      <td>-2.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-3.0</td>\n","      <td>-1.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-4.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Angka1  Angka2  Angka3  Angka4\n","0    -1.0    -3.0     0.0     NaN\n","1    -2.0    -2.0     0.0     NaN\n","2    -3.0    -1.0     0.0     NaN\n","3    -4.0     0.0     0.0     NaN\n","4     NaN     NaN     NaN     NaN"]},"metadata":{"tags":[]},"execution_count":173}]},{"cell_type":"code","metadata":{"id":"1hG5tl8f7a3b","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1617287398230,"user_tz":-480,"elapsed":3405,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"3f8d0d87-5e0b-4235-a797-f99b3d42498b"},"source":["df1 * df2"],"execution_count":174,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Angka1</th>\n","      <th>Angka2</th>\n","      <th>Angka3</th>\n","      <th>Angka4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2.0</td>\n","      <td>40.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>8.0</td>\n","      <td>24.0</td>\n","      <td>9.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>18.0</td>\n","      <td>12.0</td>\n","      <td>25.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>32.0</td>\n","      <td>4.0</td>\n","      <td>49.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Angka1  Angka2  Angka3  Angka4\n","0     2.0    40.0     1.0     NaN\n","1     8.0    24.0     9.0     NaN\n","2    18.0    12.0    25.0     NaN\n","3    32.0     4.0    49.0     NaN\n","4     NaN     NaN     NaN     NaN"]},"metadata":{"tags":[]},"execution_count":174}]},{"cell_type":"code","metadata":{"id":"7P2Ae2uA7dMh","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1617287398231,"user_tz":-480,"elapsed":3395,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"133391d2-bdc1-4b48-c5b9-65b8ea288b16"},"source":["df1 / df2"],"execution_count":175,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Angka1</th>\n","      <th>Angka2</th>\n","      <th>Angka3</th>\n","      <th>Angka4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.5</td>\n","      <td>0.625000</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.5</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.5</td>\n","      <td>0.750000</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.5</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Angka1    Angka2  Angka3  Angka4\n","0     0.5  0.625000     1.0     NaN\n","1     0.5  0.666667     1.0     NaN\n","2     0.5  0.750000     1.0     NaN\n","3     0.5  1.000000     1.0     NaN\n","4     NaN       NaN     NaN     NaN"]},"metadata":{"tags":[]},"execution_count":175}]},{"cell_type":"code","metadata":{"id":"zlZrExxZ7gJd","colab":{"base_uri":"https://localhost:8080/","height":166},"executionInfo":{"status":"ok","timestamp":1617287398231,"user_tz":-480,"elapsed":3382,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"d5445ae6-9cbe-41b7-ab76-9f0f159d4988"},"source":["df2['Angka3'] = df2['Angka2'] + df2['Angka1']\n","df2"],"execution_count":176,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Angka1</th>\n","      <th>Angka2</th>\n","      <th>Angka3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Angka1  Angka2  Angka3\n","0       2       8      10\n","1       4       6      10\n","2       6       4      10\n","3       8       2      10"]},"metadata":{"tags":[]},"execution_count":176}]},{"cell_type":"markdown","metadata":{"id":"JyK-BA_mFo_k"},"source":["# **Indexing/Akses Selection**\n","\n","**Indexing DataFrame**\n","Akses DataFrame sering juga di kenal indexing atau Subset Selection. secara sederhana maknanya adalah kita memilih suatu data dari baris tertentu dan column tertentu. kita bisa saja memilih beberapa baris dan semua kolom dari data, semua baris dan beberapa column dari data, atau beberapa baris dan bebearpa column dari data.\n","\n","Ada banyak cara-cara kita indexing suatu dataframe. diantranya adalah dengan menggunakan :\n","\n","*   dataframe[] : cara seperti ini dikenal sebagai index operator.\n","*   dataframe.loc[]: operator yang menggunakan label untuk mengakses data, jika misalkan kamu melakukan dataframe.loc[‘jumlah’], berarti kamu hendak mengakses data yang mempunyai index jumlah\n","*   dataframe.iloc[: operator yang menggunakan posisi index untuk mengakses data. jikalau kamu melakukan dataframe.iloc[2] berarti kamu hendak mengakses dataframe dengan index posisi 2\n","\n","....................\n","\n","*name of colum*\n","\n","df['column']\n","\n","....................\n","\n","df.loc[]\n","\n","....................\n","\n","*numeric*\n","\n","df.iloc[ : , : ]\n","\n","df.iloc[[ , , ],[ , , ]]\n","\n","....................\n","\n","\n","\n","\n","\n","\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"gtaSWArtXbpZ"},"source":["## **Column Selection**"]},{"cell_type":"markdown","metadata":{"id":"s54vrdha4Ri-"},"source":["### df['column']\n","\n","You can select a column (**df[col]**) and return column with label col as Series \n","\n","Or a few columns (**df[[col1, col2]]**) and returns columns as a new DataFrame."]},{"cell_type":"code","metadata":{"id":"8s4UKA0HCboL","colab":{"base_uri":"https://localhost:8080/","height":166},"executionInfo":{"status":"ok","timestamp":1617287398232,"user_tz":-480,"elapsed":3371,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"88f02a5d-2ee4-4cf8-819f-dfe997e1ae96"},"source":["import pandas as pd\n","\n","df = pd.DataFrame({'Calon President': ['Imam', 'Abrar', 'Muthia', 'Itha'],\n","                   'Umur' : [12,34,5,67],\n","                   'Alamat' : ['Jln.1', 'Jln.2', 'Jln.3', 'Jln.4'],\n","                   'Jumlah Voting': [100, 50, 60, 20],\n","                   'Jenis Kelamin':['L', 'L', 'P', 'P'],\n","                   'Negara':['Indonesia', 'Australia', 'Amerika', 'Mesir']})\n","df"],"execution_count":177,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Calon President</th>\n","      <th>Umur</th>\n","      <th>Alamat</th>\n","      <th>Jumlah Voting</th>\n","      <th>Jenis Kelamin</th>\n","      <th>Negara</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Imam</td>\n","      <td>12</td>\n","      <td>Jln.1</td>\n","      <td>100</td>\n","      <td>L</td>\n","      <td>Indonesia</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Abrar</td>\n","      <td>34</td>\n","      <td>Jln.2</td>\n","      <td>50</td>\n","      <td>L</td>\n","      <td>Australia</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Muthia</td>\n","      <td>5</td>\n","      <td>Jln.3</td>\n","      <td>60</td>\n","      <td>P</td>\n","      <td>Amerika</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Itha</td>\n","      <td>67</td>\n","      <td>Jln.4</td>\n","      <td>20</td>\n","      <td>P</td>\n","      <td>Mesir</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Calon President  Umur Alamat  Jumlah Voting Jenis Kelamin     Negara\n","0            Imam    12  Jln.1            100             L  Indonesia\n","1           Abrar    34  Jln.2             50             L  Australia\n","2          Muthia     5  Jln.3             60             P    Amerika\n","3            Itha    67  Jln.4             20             P      Mesir"]},"metadata":{"tags":[]},"execution_count":177}]},{"cell_type":"code","metadata":{"id":"XO2nCVH_bDsN","colab":{"base_uri":"https://localhost:8080/","height":166},"executionInfo":{"status":"ok","timestamp":1617287398232,"user_tz":-480,"elapsed":3358,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"fd9325ec-ada4-40e7-df7a-59b97f60410c"},"source":["df[0:4]"],"execution_count":178,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Calon President</th>\n","      <th>Umur</th>\n","      <th>Alamat</th>\n","      <th>Jumlah Voting</th>\n","      <th>Jenis Kelamin</th>\n","      <th>Negara</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Imam</td>\n","      <td>12</td>\n","      <td>Jln.1</td>\n","      <td>100</td>\n","      <td>L</td>\n","      <td>Indonesia</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Abrar</td>\n","      <td>34</td>\n","      <td>Jln.2</td>\n","      <td>50</td>\n","      <td>L</td>\n","      <td>Australia</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Muthia</td>\n","      <td>5</td>\n","      <td>Jln.3</td>\n","      <td>60</td>\n","      <td>P</td>\n","      <td>Amerika</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Itha</td>\n","      <td>67</td>\n","      <td>Jln.4</td>\n","      <td>20</td>\n","      <td>P</td>\n","      <td>Mesir</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Calon President  Umur Alamat  Jumlah Voting Jenis Kelamin     Negara\n","0            Imam    12  Jln.1            100             L  Indonesia\n","1           Abrar    34  Jln.2             50             L  Australia\n","2          Muthia     5  Jln.3             60             P    Amerika\n","3            Itha    67  Jln.4             20             P      Mesir"]},"metadata":{"tags":[]},"execution_count":178}]},{"cell_type":"code","metadata":{"id":"5siBvPu-4dms","colab":{"base_uri":"https://localhost:8080/","height":166},"executionInfo":{"status":"ok","timestamp":1617287398233,"user_tz":-480,"elapsed":3347,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"e3518c4e-bdf2-4b03-d78e-e2a22d33a8f5"},"source":["df['Umur'] #type() -> Series\n","df[['Umur']] # type() -> DataFrame"],"execution_count":179,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Umur</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>67</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Umur\n","0    12\n","1    34\n","2     5\n","3    67"]},"metadata":{"tags":[]},"execution_count":179}]},{"cell_type":"code","metadata":{"id":"SwUyBpwF4u7L","colab":{"base_uri":"https://localhost:8080/","height":166},"executionInfo":{"status":"ok","timestamp":1617287398233,"user_tz":-480,"elapsed":3334,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"25757d2d-7079-4c61-cb21-32d96a08ad17"},"source":["df[['Calon President', 'Jumlah Voting', 'Jenis Kelamin']]"],"execution_count":180,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Calon President</th>\n","      <th>Jumlah Voting</th>\n","      <th>Jenis Kelamin</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Imam</td>\n","      <td>100</td>\n","      <td>L</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Abrar</td>\n","      <td>50</td>\n","      <td>L</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Muthia</td>\n","      <td>60</td>\n","      <td>P</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Itha</td>\n","      <td>20</td>\n","      <td>P</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Calon President  Jumlah Voting Jenis Kelamin\n","0            Imam            100             L\n","1           Abrar             50             L\n","2          Muthia             60             P\n","3            Itha             20             P"]},"metadata":{"tags":[]},"execution_count":180}]},{"cell_type":"code","metadata":{"id":"A2dTS69e45qJ","colab":{"base_uri":"https://localhost:8080/","height":166},"executionInfo":{"status":"ok","timestamp":1617287398234,"user_tz":-480,"elapsed":3323,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"ca3c97dc-6e55-4cf6-f816-752bf43e3477"},"source":["# menyimpan hasil pemilihan ke dalam variable\n","df2 = df[['Calon President', 'Jumlah Voting']]\n","df2"],"execution_count":181,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Calon President</th>\n","      <th>Jumlah Voting</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Imam</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Abrar</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Muthia</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Itha</td>\n","      <td>20</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Calon President  Jumlah Voting\n","0            Imam            100\n","1           Abrar             50\n","2          Muthia             60\n","3            Itha             20"]},"metadata":{"tags":[]},"execution_count":181}]},{"cell_type":"code","metadata":{"id":"xhCl_tlm8iAT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287398234,"user_tz":-480,"elapsed":3306,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"8a0f29e8-4dbe-4b25-d506-73566754c81a"},"source":["import pandas as pd\n","\n","d = {'one' : pd.Series([1, 2, 3], index=['a', 'b', 'c']),\n","   'two' : pd.Series([1, 2, 3, 4], index=['a', 'b', 'c', 'd'])}\n","\n","df = pd.DataFrame(d)\n","print(df['one'])"],"execution_count":182,"outputs":[{"output_type":"stream","text":["a    1.0\n","b    2.0\n","c    3.0\n","d    NaN\n","Name: one, dtype: float64\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"UdCMiTLQPOnK","colab":{"base_uri":"https://localhost:8080/","height":166},"executionInfo":{"status":"ok","timestamp":1617287398235,"user_tz":-480,"elapsed":3294,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"3fb1e294-758a-4000-c934-a7af4b2c1b0d"},"source":["import pandas as pd\n","\n","df = pd.DataFrame({'Siswa': ['Imam', 'Abrar', 'Muthia', 'Itha'],\n","                   'Umur' : [12,34,5,67],\n","                   'Alamat' : ['Jln.1', 'Jln.2', 'Jln.3', 'Jln.4'],\n","                   'Jenis Kelamin':['L', 'L', 'P', 'P']})\n","df"],"execution_count":183,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Siswa</th>\n","      <th>Umur</th>\n","      <th>Alamat</th>\n","      <th>Jenis Kelamin</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Imam</td>\n","      <td>12</td>\n","      <td>Jln.1</td>\n","      <td>L</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Abrar</td>\n","      <td>34</td>\n","      <td>Jln.2</td>\n","      <td>L</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Muthia</td>\n","      <td>5</td>\n","      <td>Jln.3</td>\n","      <td>P</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Itha</td>\n","      <td>67</td>\n","      <td>Jln.4</td>\n","      <td>P</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Siswa  Umur Alamat Jenis Kelamin\n","0    Imam    12  Jln.1             L\n","1   Abrar    34  Jln.2             L\n","2  Muthia     5  Jln.3             P\n","3    Itha    67  Jln.4             P"]},"metadata":{"tags":[]},"execution_count":183}]},{"cell_type":"code","metadata":{"id":"09xMmqW0PhJg","colab":{"base_uri":"https://localhost:8080/","height":136},"executionInfo":{"status":"ok","timestamp":1617287398236,"user_tz":-480,"elapsed":3282,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"44bebceb-d15f-4521-a9c2-40bee8a833b9"},"source":["df[df['Umur'] >= 12]"],"execution_count":184,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Siswa</th>\n","      <th>Umur</th>\n","      <th>Alamat</th>\n","      <th>Jenis Kelamin</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Imam</td>\n","      <td>12</td>\n","      <td>Jln.1</td>\n","      <td>L</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Abrar</td>\n","      <td>34</td>\n","      <td>Jln.2</td>\n","      <td>L</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Itha</td>\n","      <td>67</td>\n","      <td>Jln.4</td>\n","      <td>P</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Siswa  Umur Alamat Jenis Kelamin\n","0   Imam    12  Jln.1             L\n","1  Abrar    34  Jln.2             L\n","3   Itha    67  Jln.4             P"]},"metadata":{"tags":[]},"execution_count":184}]},{"cell_type":"code","metadata":{"id":"dkjxwJ5WPnRG","colab":{"base_uri":"https://localhost:8080/","height":106},"executionInfo":{"status":"ok","timestamp":1617287398237,"user_tz":-480,"elapsed":3271,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"708cf6df-b92e-4f43-d7b6-f4eddd451d6e"},"source":["df[(df['Umur'] >= 12) & (df['Jenis Kelamin'] == 'L')]"],"execution_count":185,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Siswa</th>\n","      <th>Umur</th>\n","      <th>Alamat</th>\n","      <th>Jenis Kelamin</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Imam</td>\n","      <td>12</td>\n","      <td>Jln.1</td>\n","      <td>L</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Abrar</td>\n","      <td>34</td>\n","      <td>Jln.2</td>\n","      <td>L</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Siswa  Umur Alamat Jenis Kelamin\n","0   Imam    12  Jln.1             L\n","1  Abrar    34  Jln.2             L"]},"metadata":{"tags":[]},"execution_count":185}]},{"cell_type":"markdown","metadata":{"id":"Ddg_x9R0CCFN"},"source":["### df.column"]},{"cell_type":"code","metadata":{"id":"f3TQ4kNMCQGc","colab":{"base_uri":"https://localhost:8080/","height":166},"executionInfo":{"status":"ok","timestamp":1617287398237,"user_tz":-480,"elapsed":3259,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"8d2d0e7d-6004-4dfe-e99f-d15e1c53b28f"},"source":["import pandas as pd\n","\n","df = pd.DataFrame({'Calon President': ['Imam', 'Abrar', 'Muthia', 'Itha'],\n","                   'Umur' : [12,34,5,67],\n","                   'Alamat' : ['Jln.1', 'Jln.2', 'Jln.3', 'Jln.4'],\n","                   'Jumlah Voting': [100, 50, 60, 20],\n","                   'Jenis Kelamin':['L', 'L', 'P', 'P'],\n","                   'Negara':['Indonesia', 'Australia', 'Amerika', 'Mesir']})\n","df"],"execution_count":186,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Calon President</th>\n","      <th>Umur</th>\n","      <th>Alamat</th>\n","      <th>Jumlah Voting</th>\n","      <th>Jenis Kelamin</th>\n","      <th>Negara</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Imam</td>\n","      <td>12</td>\n","      <td>Jln.1</td>\n","      <td>100</td>\n","      <td>L</td>\n","      <td>Indonesia</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Abrar</td>\n","      <td>34</td>\n","      <td>Jln.2</td>\n","      <td>50</td>\n","      <td>L</td>\n","      <td>Australia</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Muthia</td>\n","      <td>5</td>\n","      <td>Jln.3</td>\n","      <td>60</td>\n","      <td>P</td>\n","      <td>Amerika</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Itha</td>\n","      <td>67</td>\n","      <td>Jln.4</td>\n","      <td>20</td>\n","      <td>P</td>\n","      <td>Mesir</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Calon President  Umur Alamat  Jumlah Voting Jenis Kelamin     Negara\n","0            Imam    12  Jln.1            100             L  Indonesia\n","1           Abrar    34  Jln.2             50             L  Australia\n","2          Muthia     5  Jln.3             60             P    Amerika\n","3            Itha    67  Jln.4             20             P      Mesir"]},"metadata":{"tags":[]},"execution_count":186}]},{"cell_type":"code","metadata":{"id":"YRsD2LvKFQWl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287398238,"user_tz":-480,"elapsed":3247,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"44202038-2900-4f9e-bd5a-f6a3b8616fca"},"source":["df.Umur"],"execution_count":187,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    12\n","1    34\n","2     5\n","3    67\n","Name: Umur, dtype: int64"]},"metadata":{"tags":[]},"execution_count":187}]},{"cell_type":"markdown","metadata":{"id":"VwKA41LgXlWP"},"source":["## **Row and Columns Selection**"]},{"cell_type":"markdown","metadata":{"id":"cE1ZHmWgB78I"},"source":["### df.loc[ : , : ] and df.loc[ [ ] , [ ] ] (label)\n","\n","***label*** indexing and slicing\n","\n","*slicing*\n","\n","> df.iloc[idx_row_start:idx_row_end, col_start:col_end]\n","\n","indexing\n","\n","> df.iloc[[row1,row2,row3,row n], [col1, col2, col3, col n]]\n","\n","......................................................................................\n","\n","[DataFrame.loc](https://pandas.pydata.org/pandas-docs/version/0.23.1/generated/pandas.DataFrame.loc.html)\n","\n","Access a group of rows and columns by label(s) or a boolean array.\n","\n",".loc[] is primarily label based, but may also be used with a boolean array.\n","\n","Allowed inputs are:\n","\n","* A single label, e.g. 5 or 'a', (note that 5 is interpreted as a label of the index, and never as an integer position along the index).\n","\n","* A list or array of labels, e.g. ['a', 'b', 'c'].\n","\n","* A slice object with labels, e.g. 'a':'f'.\n","\n","`Warning Note that contrary to usual python slices, both the start and the stop are included`\n","\n","* A boolean array of the same length as the axis being sliced, e.g. [True, False, True].\n","\n","A callable function with one argument (the calling Series, DataFrame or Panel) and that returns valid output for indexing (one of the above)\n","\n"]},{"cell_type":"code","metadata":{"id":"4BE_JWoHC8t3","colab":{"base_uri":"https://localhost:8080/","height":166},"executionInfo":{"status":"ok","timestamp":1617287398238,"user_tz":-480,"elapsed":3235,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"1242491e-1a00-4734-c7c7-842755204050"},"source":["import pandas as pd\n","\n","df = pd.DataFrame({'Calon President': ['Imam', 'Abrar', 'Muthia', 'Itha'],\n","                   'Umur' : [12,34,5,67],\n","                   'Alamat' : ['Jln.1', 'Jln.2', 'Jln.3', 'Jln.4'],\n","                   'Jumlah Voting': [100, 50, 60, 20],\n","                   'Jenis Kelamin':['L', 'L', 'P', 'P'],\n","                   'Negara':['Indonesia', 'Australia', 'Amerika', 'Mesir']})\n","df"],"execution_count":188,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Calon President</th>\n","      <th>Umur</th>\n","      <th>Alamat</th>\n","      <th>Jumlah Voting</th>\n","      <th>Jenis Kelamin</th>\n","      <th>Negara</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Imam</td>\n","      <td>12</td>\n","      <td>Jln.1</td>\n","      <td>100</td>\n","      <td>L</td>\n","      <td>Indonesia</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Abrar</td>\n","      <td>34</td>\n","      <td>Jln.2</td>\n","      <td>50</td>\n","      <td>L</td>\n","      <td>Australia</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Muthia</td>\n","      <td>5</td>\n","      <td>Jln.3</td>\n","      <td>60</td>\n","      <td>P</td>\n","      <td>Amerika</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Itha</td>\n","      <td>67</td>\n","      <td>Jln.4</td>\n","      <td>20</td>\n","      <td>P</td>\n","      <td>Mesir</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Calon President  Umur Alamat  Jumlah Voting Jenis Kelamin     Negara\n","0            Imam    12  Jln.1            100             L  Indonesia\n","1           Abrar    34  Jln.2             50             L  Australia\n","2          Muthia     5  Jln.3             60             P    Amerika\n","3            Itha    67  Jln.4             20             P      Mesir"]},"metadata":{"tags":[]},"execution_count":188}]},{"cell_type":"code","metadata":{"id":"jmw1W6dGE52J","colab":{"base_uri":"https://localhost:8080/","height":136},"executionInfo":{"status":"ok","timestamp":1617287398239,"user_tz":-480,"elapsed":3224,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"fa9f2ecf-e446-4d62-ef43-76cd39a78a3b"},"source":["df.loc[0:2, 'Calon President':'Jumlah Voting']"],"execution_count":189,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Calon President</th>\n","      <th>Umur</th>\n","      <th>Alamat</th>\n","      <th>Jumlah Voting</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Imam</td>\n","      <td>12</td>\n","      <td>Jln.1</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Abrar</td>\n","      <td>34</td>\n","      <td>Jln.2</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Muthia</td>\n","      <td>5</td>\n","      <td>Jln.3</td>\n","      <td>60</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Calon President  Umur Alamat  Jumlah Voting\n","0            Imam    12  Jln.1            100\n","1           Abrar    34  Jln.2             50\n","2          Muthia     5  Jln.3             60"]},"metadata":{"tags":[]},"execution_count":189}]},{"cell_type":"code","metadata":{"id":"tj8agh0ZHHTl","colab":{"base_uri":"https://localhost:8080/","height":106},"executionInfo":{"status":"ok","timestamp":1617287399136,"user_tz":-480,"elapsed":4106,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"9137d0c8-cbee-4815-eab1-bef11ce40eda"},"source":["df.loc[[0,2], ['Calon President', 'Jumlah Voting']]"],"execution_count":190,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Calon President</th>\n","      <th>Jumlah Voting</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Imam</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Muthia</td>\n","      <td>60</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Calon President  Jumlah Voting\n","0            Imam            100\n","2          Muthia             60"]},"metadata":{"tags":[]},"execution_count":190}]},{"cell_type":"code","metadata":{"id":"qPTlg9dFMMO_","colab":{"base_uri":"https://localhost:8080/","height":106},"executionInfo":{"status":"ok","timestamp":1617287399141,"user_tz":-480,"elapsed":4095,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"64b4457f-03ed-4963-9740-da665de9ec52"},"source":["df.loc[df['Jenis Kelamin'] == 'L']"],"execution_count":191,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Calon President</th>\n","      <th>Umur</th>\n","      <th>Alamat</th>\n","      <th>Jumlah Voting</th>\n","      <th>Jenis Kelamin</th>\n","      <th>Negara</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Imam</td>\n","      <td>12</td>\n","      <td>Jln.1</td>\n","      <td>100</td>\n","      <td>L</td>\n","      <td>Indonesia</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Abrar</td>\n","      <td>34</td>\n","      <td>Jln.2</td>\n","      <td>50</td>\n","      <td>L</td>\n","      <td>Australia</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Calon President  Umur Alamat  Jumlah Voting Jenis Kelamin     Negara\n","0            Imam    12  Jln.1            100             L  Indonesia\n","1           Abrar    34  Jln.2             50             L  Australia"]},"metadata":{"tags":[]},"execution_count":191}]},{"cell_type":"code","metadata":{"id":"WX3qPUV0MXFW","colab":{"base_uri":"https://localhost:8080/","height":106},"executionInfo":{"status":"ok","timestamp":1617287399142,"user_tz":-480,"elapsed":4079,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"db7e1cf9-802f-4ccc-86e4-9d9427c64913"},"source":["df.loc[(df['Umur'] >= 12) & (df['Jenis Kelamin'] == 'L')]"],"execution_count":192,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Calon President</th>\n","      <th>Umur</th>\n","      <th>Alamat</th>\n","      <th>Jumlah Voting</th>\n","      <th>Jenis Kelamin</th>\n","      <th>Negara</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Imam</td>\n","      <td>12</td>\n","      <td>Jln.1</td>\n","      <td>100</td>\n","      <td>L</td>\n","      <td>Indonesia</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Abrar</td>\n","      <td>34</td>\n","      <td>Jln.2</td>\n","      <td>50</td>\n","      <td>L</td>\n","      <td>Australia</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Calon President  Umur Alamat  Jumlah Voting Jenis Kelamin     Negara\n","0            Imam    12  Jln.1            100             L  Indonesia\n","1           Abrar    34  Jln.2             50             L  Australia"]},"metadata":{"tags":[]},"execution_count":192}]},{"cell_type":"code","metadata":{"id":"ZqilXyYaSgmR","colab":{"base_uri":"https://localhost:8080/","height":106},"executionInfo":{"status":"ok","timestamp":1617287399142,"user_tz":-480,"elapsed":4065,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"5cfe140a-e2c5-497d-8137-28ac23be76c8"},"source":["lakilaki = df['Jenis Kelamin'] == 'L'\n","umur = df['Umur'] >= 12\n","df.loc[lakilaki & umur]"],"execution_count":193,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Calon President</th>\n","      <th>Umur</th>\n","      <th>Alamat</th>\n","      <th>Jumlah Voting</th>\n","      <th>Jenis Kelamin</th>\n","      <th>Negara</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Imam</td>\n","      <td>12</td>\n","      <td>Jln.1</td>\n","      <td>100</td>\n","      <td>L</td>\n","      <td>Indonesia</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Abrar</td>\n","      <td>34</td>\n","      <td>Jln.2</td>\n","      <td>50</td>\n","      <td>L</td>\n","      <td>Australia</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Calon President  Umur Alamat  Jumlah Voting Jenis Kelamin     Negara\n","0            Imam    12  Jln.1            100             L  Indonesia\n","1           Abrar    34  Jln.2             50             L  Australia"]},"metadata":{"tags":[]},"execution_count":193}]},{"cell_type":"code","metadata":{"id":"iOCKCACsaUPP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287399143,"user_tz":-480,"elapsed":4054,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"857cf057-beaf-4df0-f31e-c30e502357c7"},"source":["import pandas as pd\n","\n","d = {'one' : pd.Series([1, 2, 3], index=['a', 'b', 'c']), \n","   'two' : pd.Series([1, 2, 3, 4], index=['a', 'b', 'c', 'd'])}\n","\n","data_frame = pd.DataFrame(d)\n","print(data_frame.loc['b'])"],"execution_count":194,"outputs":[{"output_type":"stream","text":["one    2.0\n","two    2.0\n","Name: b, dtype: float64\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"8q1_9AwR4HAD"},"source":["### df.iloc[ : , : ] and df.iloc[ [ ] , [ ] ] (integer)\n","\n","***numeric*** indexing and slicing\n","\n","*slicing*\n","\n","> df.iloc[idx_row_start:idx_row_end, col_start:col_end]\n","\n","indexing\n","\n","> df.iloc[[row1,row2,row3,row n], [col1, col2, col3, col n]]"]},{"cell_type":"code","metadata":{"id":"0w-g68nQ1837","colab":{"base_uri":"https://localhost:8080/","height":106},"executionInfo":{"status":"ok","timestamp":1617287399143,"user_tz":-480,"elapsed":4037,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"a8e4260b-8b5d-4db7-aa9f-d497e22acf1b"},"source":["df.iloc[0:2, :]"],"execution_count":195,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Calon President</th>\n","      <th>Umur</th>\n","      <th>Alamat</th>\n","      <th>Jumlah Voting</th>\n","      <th>Jenis Kelamin</th>\n","      <th>Negara</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Imam</td>\n","      <td>12</td>\n","      <td>Jln.1</td>\n","      <td>100</td>\n","      <td>L</td>\n","      <td>Indonesia</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Abrar</td>\n","      <td>34</td>\n","      <td>Jln.2</td>\n","      <td>50</td>\n","      <td>L</td>\n","      <td>Australia</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Calon President  Umur Alamat  Jumlah Voting Jenis Kelamin     Negara\n","0            Imam    12  Jln.1            100             L  Indonesia\n","1           Abrar    34  Jln.2             50             L  Australia"]},"metadata":{"tags":[]},"execution_count":195}]},{"cell_type":"code","metadata":{"id":"XHpeoxsM2V-_","colab":{"base_uri":"https://localhost:8080/","height":106},"executionInfo":{"status":"ok","timestamp":1617287399144,"user_tz":-480,"elapsed":4027,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"43d899f1-bbde-492e-d88e-a27fe0106226"},"source":["df.iloc[0:2,0:2]"],"execution_count":196,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Calon President</th>\n","      <th>Umur</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Imam</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Abrar</td>\n","      <td>34</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Calon President  Umur\n","0            Imam    12\n","1           Abrar    34"]},"metadata":{"tags":[]},"execution_count":196}]},{"cell_type":"code","metadata":{"id":"4BHVL0xkN5-T","colab":{"base_uri":"https://localhost:8080/","height":77},"executionInfo":{"status":"ok","timestamp":1617287399144,"user_tz":-480,"elapsed":4016,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"b275e7b0-30eb-4050-ceaa-066c868840b0"},"source":["df.iloc[[3],:]"],"execution_count":197,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Calon President</th>\n","      <th>Umur</th>\n","      <th>Alamat</th>\n","      <th>Jumlah Voting</th>\n","      <th>Jenis Kelamin</th>\n","      <th>Negara</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3</th>\n","      <td>Itha</td>\n","      <td>67</td>\n","      <td>Jln.4</td>\n","      <td>20</td>\n","      <td>P</td>\n","      <td>Mesir</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Calon President  Umur Alamat  Jumlah Voting Jenis Kelamin Negara\n","3            Itha    67  Jln.4             20             P  Mesir"]},"metadata":{"tags":[]},"execution_count":197}]},{"cell_type":"code","metadata":{"id":"VUmorO4y2cbC","colab":{"base_uri":"https://localhost:8080/","height":136},"executionInfo":{"status":"ok","timestamp":1617287399145,"user_tz":-480,"elapsed":4005,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"85be334b-bbd2-4077-e36c-3d169071ecff"},"source":["# df.iloc[0:2,['Umur', 'Alamat']] .iloc requires numeric indexers, got ['Umur' 'Alamat']\n","df.iloc[[0,2,3], [1,2]]"],"execution_count":198,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Umur</th>\n","      <th>Alamat</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>12</td>\n","      <td>Jln.1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5</td>\n","      <td>Jln.3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>67</td>\n","      <td>Jln.4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Umur Alamat\n","0    12  Jln.1\n","2     5  Jln.3\n","3    67  Jln.4"]},"metadata":{"tags":[]},"execution_count":198}]},{"cell_type":"code","metadata":{"id":"kFfgj2UZax5N","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287399145,"user_tz":-480,"elapsed":3994,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"d1cf1b69-cda7-49ae-c87b-1c8c31c2b853"},"source":["import pandas as pd\n","\n","d = {'one' : pd.Series([1, 2, 3], index=['a', 'b', 'c']),\n","   'two' : pd.Series([1, 2, 3, 4], index=['a', 'b', 'c', 'd'])}\n","\n","df = pd.DataFrame(d)\n","print(df.iloc[2])"],"execution_count":199,"outputs":[{"output_type":"stream","text":["one    3.0\n","two    3.0\n","Name: c, dtype: float64\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"EBkYPy70W-_L"},"source":["## Task\n","\n","cobalah suatu metode dari pandas untuk mengetahui beberapa data pertama dan beberapa data terakhir. kemudian sebutkan nilai dari:\n","- baris pertama dari column price\n","- baris terakhir dari column color"]},{"cell_type":"code","metadata":{"id":"uhgsynyLrv6r","executionInfo":{"status":"ok","timestamp":1617287399145,"user_tz":-480,"elapsed":3984,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}}},"source":["# from google.colab import drive\n","# drive.mount('/content/drive/')"],"execution_count":200,"outputs":[]},{"cell_type":"code","metadata":{"id":"qA-X0z8CXjeT","colab":{"base_uri":"https://localhost:8080/","height":402},"executionInfo":{"status":"ok","timestamp":1617287399146,"user_tz":-480,"elapsed":3976,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"fdf11ae2-489b-43f9-f842-03578a98e12b"},"source":["# '/content/drive/My Drive/Colab Notebooks/Wooky Pandas/diamonds-1.csv'\n","# Membaca data dan memasukannya kedalam suatu variabel\n","import pandas as pd\n","# url = 'https://blog.sanbercode.com/wp-content/uploads/2020/04/diamonds-1.csv'\n","# df_from_csv = pd.read_csv(\"diamonds-1.csv\")\n","df_from_csv = pd.read_csv('https://drive.google.com/uc?id=13jtHSMJIa8gzYncyus2o2uTm-H_LFN0B')\n","df_from_csv"],"execution_count":201,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>carat</th>\n","      <th>cut</th>\n","      <th>color</th>\n","      <th>clarity</th>\n","      <th>depth</th>\n","      <th>table</th>\n","      <th>price</th>\n","      <th>x</th>\n","      <th>y</th>\n","      <th>z</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0.23</td>\n","      <td>Ideal</td>\n","      <td>E</td>\n","      <td>SI2</td>\n","      <td>61.5</td>\n","      <td>55.0</td>\n","      <td>326</td>\n","      <td>3.95</td>\n","      <td>3.98</td>\n","      <td>2.43</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0.21</td>\n","      <td>Premium</td>\n","      <td>E</td>\n","      <td>SI1</td>\n","      <td>59.8</td>\n","      <td>61.0</td>\n","      <td>326</td>\n","      <td>3.89</td>\n","      <td>3.84</td>\n","      <td>2.31</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0.23</td>\n","      <td>Good</td>\n","      <td>E</td>\n","      <td>VS1</td>\n","      <td>56.9</td>\n","      <td>65.0</td>\n","      <td>327</td>\n","      <td>4.05</td>\n","      <td>4.07</td>\n","      <td>2.31</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>0.29</td>\n","      <td>Premium</td>\n","      <td>I</td>\n","      <td>VS2</td>\n","      <td>62.4</td>\n","      <td>58.0</td>\n","      <td>334</td>\n","      <td>4.20</td>\n","      <td>4.23</td>\n","      <td>2.63</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0.31</td>\n","      <td>Good</td>\n","      <td>J</td>\n","      <td>SI2</td>\n","      <td>63.3</td>\n","      <td>58.0</td>\n","      <td>335</td>\n","      <td>4.34</td>\n","      <td>4.35</td>\n","      <td>2.75</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>53935</th>\n","      <td>53936</td>\n","      <td>0.72</td>\n","      <td>Ideal</td>\n","      <td>D</td>\n","      <td>SI1</td>\n","      <td>60.8</td>\n","      <td>57.0</td>\n","      <td>2757</td>\n","      <td>5.75</td>\n","      <td>5.76</td>\n","      <td>3.50</td>\n","    </tr>\n","    <tr>\n","      <th>53936</th>\n","      <td>53937</td>\n","      <td>0.72</td>\n","      <td>Good</td>\n","      <td>D</td>\n","      <td>SI1</td>\n","      <td>63.1</td>\n","      <td>55.0</td>\n","      <td>2757</td>\n","      <td>5.69</td>\n","      <td>5.75</td>\n","      <td>3.61</td>\n","    </tr>\n","    <tr>\n","      <th>53937</th>\n","      <td>53938</td>\n","      <td>0.70</td>\n","      <td>Very Good</td>\n","      <td>D</td>\n","      <td>SI1</td>\n","      <td>62.8</td>\n","      <td>60.0</td>\n","      <td>2757</td>\n","      <td>5.66</td>\n","      <td>5.68</td>\n","      <td>3.56</td>\n","    </tr>\n","    <tr>\n","      <th>53938</th>\n","      <td>53939</td>\n","      <td>0.86</td>\n","      <td>Premium</td>\n","      <td>H</td>\n","      <td>SI2</td>\n","      <td>61.0</td>\n","      <td>58.0</td>\n","      <td>2757</td>\n","      <td>6.15</td>\n","      <td>6.12</td>\n","      <td>3.74</td>\n","    </tr>\n","    <tr>\n","      <th>53939</th>\n","      <td>53940</td>\n","      <td>0.75</td>\n","      <td>Ideal</td>\n","      <td>D</td>\n","      <td>SI2</td>\n","      <td>62.2</td>\n","      <td>55.0</td>\n","      <td>2757</td>\n","      <td>5.83</td>\n","      <td>5.87</td>\n","      <td>3.64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>53940 rows × 11 columns</p>\n","</div>"],"text/plain":["       Unnamed: 0  carat        cut color  ... price     x     y     z\n","0               1   0.23      Ideal     E  ...   326  3.95  3.98  2.43\n","1               2   0.21    Premium     E  ...   326  3.89  3.84  2.31\n","2               3   0.23       Good     E  ...   327  4.05  4.07  2.31\n","3               4   0.29    Premium     I  ...   334  4.20  4.23  2.63\n","4               5   0.31       Good     J  ...   335  4.34  4.35  2.75\n","...           ...    ...        ...   ...  ...   ...   ...   ...   ...\n","53935       53936   0.72      Ideal     D  ...  2757  5.75  5.76  3.50\n","53936       53937   0.72       Good     D  ...  2757  5.69  5.75  3.61\n","53937       53938   0.70  Very Good     D  ...  2757  5.66  5.68  3.56\n","53938       53939   0.86    Premium     H  ...  2757  6.15  6.12  3.74\n","53939       53940   0.75      Ideal     D  ...  2757  5.83  5.87  3.64\n","\n","[53940 rows x 11 columns]"]},"metadata":{"tags":[]},"execution_count":201}]},{"cell_type":"code","metadata":{"id":"fVEcBNdbXIqc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287399146,"user_tz":-480,"elapsed":3964,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"3c9873ed-4a0e-495c-9f67-804f1cc5f494"},"source":["# code here\n","# Dengan index\n","df_from_csv['price'][[0]]\n","# Dengan method loc\n","df_from_csv.loc[0, ['price']]\n","# Dengan method iloc\n","df_from_csv['price'].iloc[[0]]\n","# Dengan method head\n","df_from_csv['price'].head(1)"],"execution_count":202,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    326\n","Name: price, dtype: int64"]},"metadata":{"tags":[]},"execution_count":202}]},{"cell_type":"code","metadata":{"id":"PbqGtnJuXLl4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287399147,"user_tz":-480,"elapsed":3953,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"7869fe30-3290-4c71-bd66-d1e9cb1d0058"},"source":["# Dengan index\n","df_from_csv['color'][[len(df_from_csv)-1]]\n","# Dengan method tail()\n","df_from_csv['color'].tail(1)"],"execution_count":203,"outputs":[{"output_type":"execute_result","data":{"text/plain":["53939    D\n","Name: color, dtype: object"]},"metadata":{"tags":[]},"execution_count":203}]},{"cell_type":"markdown","metadata":{"id":"2_A8aeJp6p4d"},"source":["## **Multiple Index in Pandas**"]},{"cell_type":"code","metadata":{"id":"KwxElH11_tLu","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1617287399148,"user_tz":-480,"elapsed":3942,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"49142bb1-7b81-40aa-bb6a-04315efef6c7"},"source":["arrays = [['Falcon', 'Falcon', 'Parrot', 'Parrot'],\n","          ['Captive', 'Wild', 'Captive', 'Wild']]\n","index = pd.MultiIndex.from_arrays(arrays, names=('Animal', 'Type'))\n","df = pd.DataFrame({'Max Speed': [390., 350., 30., 20.]}, index=index)\n","df"],"execution_count":204,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>Max Speed</th>\n","    </tr>\n","    <tr>\n","      <th>Animal</th>\n","      <th>Type</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">Falcon</th>\n","      <th>Captive</th>\n","      <td>390.0</td>\n","    </tr>\n","    <tr>\n","      <th>Wild</th>\n","      <td>350.0</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">Parrot</th>\n","      <th>Captive</th>\n","      <td>30.0</td>\n","    </tr>\n","    <tr>\n","      <th>Wild</th>\n","      <td>20.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                Max Speed\n","Animal Type              \n","Falcon Captive      390.0\n","       Wild         350.0\n","Parrot Captive       30.0\n","       Wild          20.0"]},"metadata":{"tags":[]},"execution_count":204}]},{"cell_type":"code","metadata":{"id":"kdXWxnps6wek","colab":{"base_uri":"https://localhost:8080/","height":314},"executionInfo":{"status":"ok","timestamp":1617287399148,"user_tz":-480,"elapsed":3930,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"ad239eaa-face-4697-8ae5-4ed3d3e935e4"},"source":["import pandas as pd\n","stocks = pd.read_csv('http://bit.ly/smallstocks')\n","stocks"],"execution_count":205,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Close</th>\n","      <th>Volume</th>\n","      <th>Symbol</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2016-10-03</td>\n","      <td>31.50</td>\n","      <td>14070500</td>\n","      <td>CSCO</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2016-10-03</td>\n","      <td>112.52</td>\n","      <td>21701800</td>\n","      <td>AAPL</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2016-10-03</td>\n","      <td>57.42</td>\n","      <td>19189500</td>\n","      <td>MSFT</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2016-10-04</td>\n","      <td>113.00</td>\n","      <td>29736800</td>\n","      <td>AAPL</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2016-10-04</td>\n","      <td>57.24</td>\n","      <td>20085900</td>\n","      <td>MSFT</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2016-10-04</td>\n","      <td>31.35</td>\n","      <td>18460400</td>\n","      <td>CSCO</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2016-10-05</td>\n","      <td>57.64</td>\n","      <td>16726400</td>\n","      <td>MSFT</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2016-10-05</td>\n","      <td>31.59</td>\n","      <td>11808600</td>\n","      <td>CSCO</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2016-10-05</td>\n","      <td>113.05</td>\n","      <td>21453100</td>\n","      <td>AAPL</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         Date   Close    Volume Symbol\n","0  2016-10-03   31.50  14070500   CSCO\n","1  2016-10-03  112.52  21701800   AAPL\n","2  2016-10-03   57.42  19189500   MSFT\n","3  2016-10-04  113.00  29736800   AAPL\n","4  2016-10-04   57.24  20085900   MSFT\n","5  2016-10-04   31.35  18460400   CSCO\n","6  2016-10-05   57.64  16726400   MSFT\n","7  2016-10-05   31.59  11808600   CSCO\n","8  2016-10-05  113.05  21453100   AAPL"]},"metadata":{"tags":[]},"execution_count":205}]},{"cell_type":"code","metadata":{"id":"5QUmPsr97Oi_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287399148,"user_tz":-480,"elapsed":3918,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"d12fea4f-19c2-4308-c84d-0623faf7f88a"},"source":["stocks.index #regular index"],"execution_count":206,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RangeIndex(start=0, stop=9, step=1)"]},"metadata":{"tags":[]},"execution_count":206}]},{"cell_type":"code","metadata":{"id":"oatWa9Sr7SV3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287399149,"user_tz":-480,"elapsed":3908,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"d1147568-8358-4f48-f4cf-4bec8cc11b36"},"source":["stocks.groupby('Symbol').Close.mean()"],"execution_count":207,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Symbol\n","AAPL    112.856667\n","CSCO     31.480000\n","MSFT     57.433333\n","Name: Close, dtype: float64"]},"metadata":{"tags":[]},"execution_count":207}]},{"cell_type":"code","metadata":{"id":"clplfkwU7uCV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287399149,"user_tz":-480,"elapsed":3897,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"4a171c4a-706b-487b-e464-768eebbdfcac"},"source":["stocks.groupby(['Symbol', 'Date']).Close.mean()"],"execution_count":208,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Symbol  Date      \n","AAPL    2016-10-03    112.52\n","        2016-10-04    113.00\n","        2016-10-05    113.05\n","CSCO    2016-10-03     31.50\n","        2016-10-04     31.35\n","        2016-10-05     31.59\n","MSFT    2016-10-03     57.42\n","        2016-10-04     57.24\n","        2016-10-05     57.64\n","Name: Close, dtype: float64"]},"metadata":{"tags":[]},"execution_count":208}]},{"cell_type":"code","metadata":{"id":"naorA3vT8jJP","colab":{"base_uri":"https://localhost:8080/","height":225},"executionInfo":{"status":"ok","timestamp":1617287399150,"user_tz":-480,"elapsed":3887,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"1c62a971-bcc8-49e2-fde3-abf44fae17b3"},"source":["import pandas as pd\n","raw_data = {'city':['Tripoli', 'Tripoli', 'Rome', 'Rome', 'Sydney', 'Sydney'],\n","            'rank':['1st', '2nd', '1st', '2nd', '1st', '2nd'],\n","            'name':['Noureddin', 'Adam', 'Kevin', 'Raihana', 'Raghas', 'Mahdi'],\n","            'score1':[44, 48, 39, 41, 38, 44],\n","            'score2':[67, 63, 55, 70, 64, 77]}\n","df = pd.DataFrame(raw_data, columns = ['city', 'rank', 'name', 'score1', 'score2'])\n","df"],"execution_count":209,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>city</th>\n","      <th>rank</th>\n","      <th>name</th>\n","      <th>score1</th>\n","      <th>score2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Tripoli</td>\n","      <td>1st</td>\n","      <td>Noureddin</td>\n","      <td>44</td>\n","      <td>67</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Tripoli</td>\n","      <td>2nd</td>\n","      <td>Adam</td>\n","      <td>48</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Rome</td>\n","      <td>1st</td>\n","      <td>Kevin</td>\n","      <td>39</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Rome</td>\n","      <td>2nd</td>\n","      <td>Raihana</td>\n","      <td>41</td>\n","      <td>70</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Sydney</td>\n","      <td>1st</td>\n","      <td>Raghas</td>\n","      <td>38</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Sydney</td>\n","      <td>2nd</td>\n","      <td>Mahdi</td>\n","      <td>44</td>\n","      <td>77</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      city rank       name  score1  score2\n","0  Tripoli  1st  Noureddin      44      67\n","1  Tripoli  2nd       Adam      48      63\n","2     Rome  1st      Kevin      39      55\n","3     Rome  2nd    Raihana      41      70\n","4   Sydney  1st     Raghas      38      64\n","5   Sydney  2nd      Mahdi      44      77"]},"metadata":{"tags":[]},"execution_count":209}]},{"cell_type":"code","metadata":{"id":"Px1QVohbLBUL","colab":{"base_uri":"https://localhost:8080/","height":254},"executionInfo":{"status":"ok","timestamp":1617287399150,"user_tz":-480,"elapsed":3875,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"d10c02eb-0abd-4584-d52a-7dc52843fb6d"},"source":["df.set_index(['city', 'rank'], drop=False)"],"execution_count":210,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>city</th>\n","      <th>rank</th>\n","      <th>name</th>\n","      <th>score1</th>\n","      <th>score2</th>\n","    </tr>\n","    <tr>\n","      <th>city</th>\n","      <th>rank</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">Tripoli</th>\n","      <th>1st</th>\n","      <td>Tripoli</td>\n","      <td>1st</td>\n","      <td>Noureddin</td>\n","      <td>44</td>\n","      <td>67</td>\n","    </tr>\n","    <tr>\n","      <th>2nd</th>\n","      <td>Tripoli</td>\n","      <td>2nd</td>\n","      <td>Adam</td>\n","      <td>48</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">Rome</th>\n","      <th>1st</th>\n","      <td>Rome</td>\n","      <td>1st</td>\n","      <td>Kevin</td>\n","      <td>39</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>2nd</th>\n","      <td>Rome</td>\n","      <td>2nd</td>\n","      <td>Raihana</td>\n","      <td>41</td>\n","      <td>70</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">Sydney</th>\n","      <th>1st</th>\n","      <td>Sydney</td>\n","      <td>1st</td>\n","      <td>Raghas</td>\n","      <td>38</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>2nd</th>\n","      <td>Sydney</td>\n","      <td>2nd</td>\n","      <td>Mahdi</td>\n","      <td>44</td>\n","      <td>77</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                 city rank       name  score1  score2\n","city    rank                                         \n","Tripoli 1st   Tripoli  1st  Noureddin      44      67\n","        2nd   Tripoli  2nd       Adam      48      63\n","Rome    1st      Rome  1st      Kevin      39      55\n","        2nd      Rome  2nd    Raihana      41      70\n","Sydney  1st    Sydney  1st     Raghas      38      64\n","        2nd    Sydney  2nd      Mahdi      44      77"]},"metadata":{"tags":[]},"execution_count":210}]},{"cell_type":"code","metadata":{"id":"lK8MPNE9LpK-","colab":{"base_uri":"https://localhost:8080/","height":254},"executionInfo":{"status":"ok","timestamp":1617287399768,"user_tz":-480,"elapsed":4481,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"b9a33a06-88c6-43e6-dcae-bd17883c061d"},"source":["df.set_index(['city', 'rank'], drop=True)"],"execution_count":211,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>name</th>\n","      <th>score1</th>\n","      <th>score2</th>\n","    </tr>\n","    <tr>\n","      <th>city</th>\n","      <th>rank</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">Tripoli</th>\n","      <th>1st</th>\n","      <td>Noureddin</td>\n","      <td>44</td>\n","      <td>67</td>\n","    </tr>\n","    <tr>\n","      <th>2nd</th>\n","      <td>Adam</td>\n","      <td>48</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">Rome</th>\n","      <th>1st</th>\n","      <td>Kevin</td>\n","      <td>39</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>2nd</th>\n","      <td>Raihana</td>\n","      <td>41</td>\n","      <td>70</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">Sydney</th>\n","      <th>1st</th>\n","      <td>Raghas</td>\n","      <td>38</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>2nd</th>\n","      <td>Mahdi</td>\n","      <td>44</td>\n","      <td>77</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                   name  score1  score2\n","city    rank                           \n","Tripoli 1st   Noureddin      44      67\n","        2nd        Adam      48      63\n","Rome    1st       Kevin      39      55\n","        2nd     Raihana      41      70\n","Sydney  1st      Raghas      38      64\n","        2nd       Mahdi      44      77"]},"metadata":{"tags":[]},"execution_count":211}]},{"cell_type":"code","metadata":{"id":"UmCAMEEQdv8a","executionInfo":{"status":"ok","timestamp":1617287399769,"user_tz":-480,"elapsed":4472,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}}},"source":[""],"execution_count":211,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"LN3bITXOYEc5"},"source":["# Column Addition and Deletion\n","\n"]},{"cell_type":"markdown","metadata":{"id":"KIE9CXORoME9"},"source":["## Column Addition\n","\n","Adding a new column by passing as Series\n","> df['three']=pd.Series([10,20,30],index=['a','b','c'])\n","\n","Adding a new column using the existing columns in DataFrame\n","> df['four']=df['one']+df['three']"]},{"cell_type":"code","metadata":{"id":"iRshlNMJYcAY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287399770,"user_tz":-480,"elapsed":4464,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"ad9ba1f3-1f9e-4ae0-ecac-95d0de04d4a4"},"source":["import pandas as pd\n","\n","d = {'one' : pd.Series([1, 2, 3], index=['a', 'b', 'c']),\n","   'two' : pd.Series([1, 2, 3, 4], index=['a', 'b', 'c', 'd'])}\n","\n","df = pd.DataFrame(d)\n","\n","# Adding a new column to an existing DataFrame object with column label by passing new series\n","\n","print (\"Adding a new column by passing as Series:\")\n","df['three']=pd.Series([10,20,30],index=['a','b','c'])\n","print(df)\n","\n","print('')\n","\n","print (\"Adding a new column using the existing columns in DataFrame:\")\n","df['four']=df['one']+df['three']\n","\n","print(df)"],"execution_count":212,"outputs":[{"output_type":"stream","text":["Adding a new column by passing as Series:\n","   one  two  three\n","a  1.0    1   10.0\n","b  2.0    2   20.0\n","c  3.0    3   30.0\n","d  NaN    4    NaN\n","\n","Adding a new column using the existing columns in DataFrame:\n","   one  two  three  four\n","a  1.0    1   10.0  11.0\n","b  2.0    2   20.0  22.0\n","c  3.0    3   30.0  33.0\n","d  NaN    4    NaN   NaN\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"HrBTZdxsY6WE"},"source":["## **Column Deletion**\n","\n","using del function\n","*   del(df[columns]) / del df[columns]\n","\n","using pop function\n","*   df.pop('columns')\n","\n"]},{"cell_type":"code","metadata":{"id":"JFFXMcbgY-n_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287399770,"user_tz":-480,"elapsed":4453,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"d4a6ef36-89d2-40ee-efb0-d71a559d6cce"},"source":["# Using the previous DataFrame, we will delete a column\n","# using del function\n","import pandas as pd\n","\n","d = {'one' : pd.Series([1, 2, 3], index=['a', 'b', 'c']), \n","   'two' : pd.Series([1, 2, 3, 4], index=['a', 'b', 'c', 'd']), \n","   'three' : pd.Series([10,20,30], index=['a','b','c'])}\n","\n","df = pd.DataFrame(d)\n","print (\"Our dataframe is:\")\n","print(df)\n","\n","print('')\n","\n","# using del function\n","print (\"Deleting the first column using DEL function:\")\n","del df['one']\n","print(df)\n","\n","print('')\n","\n","# using pop function\n","print (\"Deleting another column using POP function:\")\n","df.pop('two')\n","print(df)"],"execution_count":213,"outputs":[{"output_type":"stream","text":["Our dataframe is:\n","   one  two  three\n","a  1.0    1   10.0\n","b  2.0    2   20.0\n","c  3.0    3   30.0\n","d  NaN    4    NaN\n","\n","Deleting the first column using DEL function:\n","   two  three\n","a    1   10.0\n","b    2   20.0\n","c    3   30.0\n","d    4    NaN\n","\n","Deleting another column using POP function:\n","   three\n","a   10.0\n","b   20.0\n","c   30.0\n","d    NaN\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"pduZhHhFd92M"},"source":["# **Row Selection, Addition, and Deletion**"]},{"cell_type":"markdown","metadata":{"id":"vd0o2z22eGu9"},"source":["## Row Selection"]},{"cell_type":"markdown","metadata":{"id":"cLg64MlrefDM"},"source":["### Selection by Label"]},{"cell_type":"code","metadata":{"id":"E5VdtSofeJ9w","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287399770,"user_tz":-480,"elapsed":4441,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"9e3cbacc-3937-4f80-eb93-2e026d151c4a"},"source":["# using loc[]\n","import pandas as pd\n","\n","d = {'one' : pd.Series([1, 2, 3], index=['a', 'b', 'c']), \n","   'two' : pd.Series([1, 2, 3, 4], index=['a', 'b', 'c', 'd'])}\n","\n","data_frame = pd.DataFrame(d)\n","print(data_frame.loc['b'])"],"execution_count":214,"outputs":[{"output_type":"stream","text":["one    2.0\n","two    2.0\n","Name: b, dtype: float64\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"4o4JPyU9eglk"},"source":["### Selection by integer location\n"]},{"cell_type":"code","metadata":{"id":"U2JNqh0YeX5R","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287399771,"user_tz":-480,"elapsed":4431,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"a1e3dbf6-ccda-4441-ddc6-039be193f609"},"source":["# using iloc[]\n","import pandas as pd\n","\n","d = {'one' : pd.Series([1, 2, 3], index=['a', 'b', 'c']),\n","   'two' : pd.Series([1, 2, 3, 4], index=['a', 'b', 'c', 'd'])}\n","\n","df = pd.DataFrame(d)\n","print(df.iloc[2])"],"execution_count":215,"outputs":[{"output_type":"stream","text":["one    3.0\n","two    3.0\n","Name: c, dtype: float64\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"gehrleObesLg"},"source":["### Slice Rows\n","Multiple rows can be selected using ‘ : ’ operator."]},{"cell_type":"code","metadata":{"id":"xzagG0JafQdn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287399771,"user_tz":-480,"elapsed":4423,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"6d70b26c-d95d-4ab2-d316-6a69e3c336a9"},"source":["# using [ : ] bukan [index]\n","import pandas as pd\n","\n","d = {'one' : pd.Series([1, 2, 3], index=['a', 'b', 'c']), \n","   'two' : pd.Series([1, 2, 3, 4], index=['a', 'b', 'c', 'd'])}\n","\n","df = pd.DataFrame(d)\n","print(df[2:4])"],"execution_count":216,"outputs":[{"output_type":"stream","text":["   one  two\n","c  3.0    3\n","d  NaN    4\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"zemqc5gyfj5c"},"source":["## Addition of Rows\n","Add new rows to a DataFrame using the append function. This function will append the rows at the end."]},{"cell_type":"code","metadata":{"id":"rBo7BcvffloK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287399772,"user_tz":-480,"elapsed":4415,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"24e214e9-a48b-40cd-e370-f409741558dd"},"source":["import pandas as pd\n","\n","df = pd.DataFrame([[1, 2], [3, 4]], columns = ['a','b'])\n","df2 = pd.DataFrame([[5, 6], [7, 8]], columns = ['a','b'])\n","\n","df = df.append(df2)\n","print(df)"],"execution_count":217,"outputs":[{"output_type":"stream","text":["   a  b\n","0  1  2\n","1  3  4\n","0  5  6\n","1  7  8\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"YXTeZ5Qbfu25","colab":{"base_uri":"https://localhost:8080/","height":166},"executionInfo":{"status":"ok","timestamp":1617287399772,"user_tz":-480,"elapsed":4408,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"c822e0da-0386-47e3-cec0-b61c8a45bc28"},"source":["df_baru = df + df2\n","df_baru"],"execution_count":218,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>a</th>\n","      <th>b</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>10</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>14</td>\n","      <td>16</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    a   b\n","0   6   8\n","0  10  12\n","1  10  12\n","1  14  16"]},"metadata":{"tags":[]},"execution_count":218}]},{"cell_type":"markdown","metadata":{"id":"mHy_xi8Vh5WD"},"source":["## Deletion of Rows\n","\n","Use index label to delete or drop rows from a DataFrame. If label is duplicated, then multiple rows will be dropped.\n","\n","If you observe, in the above example, the labels are duplicate. Let us drop a label and will see how many rows will get dropped."]},{"cell_type":"code","metadata":{"id":"xwR1AmVJh8JO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287399773,"user_tz":-480,"elapsed":4404,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"5e061325-b108-48d3-f946-d4ab16c8ba5a"},"source":["import pandas as pd\n","\n","df = pd.DataFrame([[1, 2], [3, 4]], columns = ['a','b'])\n","df2 = pd.DataFrame([[5, 6], [7, 8]], columns = ['a','b'])\n","\n","df = df.append(df2)\n","\n","print(df)"],"execution_count":219,"outputs":[{"output_type":"stream","text":["   a  b\n","0  1  2\n","1  3  4\n","0  5  6\n","1  7  8\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"xcBR8-L4iXpM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617287399773,"user_tz":-480,"elapsed":4395,"user":{"displayName":"Nur Imam Masri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZ3lFNibc6IiqKG8y5skXagV5Pxj_73pfiuy7HIA=s64","userId":"17468474929689744386"}},"outputId":"58f010db-f4e2-449e-92ba-88c4abd083e5"},"source":["# Drop rows with label 0 (duplicate label, all delete)\n","df = df.drop(0)\n","print(df)"],"execution_count":220,"outputs":[{"output_type":"stream","text":["   a  b\n","1  3  4\n","1  7  8\n"],"name":"stdout"}]}]}